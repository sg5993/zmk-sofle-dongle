#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 1 1>; };

&msc {
    acceleration-exponent = <2>;      // 0
    time-to-max-speed-ms = <50>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <0>;
    acceleration-exponent = <2>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        zge {
            bindings = <&to 1>;
            key-positions = <40 28>;
            layers = <0>;
            timeout-ms = <65>;
        };

        ragekl {
            bindings = <&to 0>;
            key-positions = <40 28>;
            layers = <1 2 5>;
            timeout-ms = <65>;
        };

        copyofbir {
            bindings = <&to 1>;
            key-positions = <36 50>;
            layers = <0>;
            timeout-ms = <65>;
        };

        rev {
            bindings = <&to 0>;
            key-positions = <36 50>;
            layers = <1 2 5>;
            timeout-ms = <65>;
        };

        hanyung {
            bindings = <&kp LS(SPACE)>;
            key-positions = <60 50>;
        };

        hanyung2 {
            bindings = <&kp LS(SPACE)>;
            key-positions = <56 39>;
        };
    };

    macros {
        zoomIn: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp PLUS>;
            label = "NEW_MACRO";
        };

        zoomOut: zoomOut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp MINUS>;
            label = "ZOOMOUT";
        };

        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp C>;
            label = "COPY";
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp V>;
            label = "PASTE";
        };

        cut: cut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp X>;
            label = "CUT";
        };

        selectAll: selectAll {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp A>;
            label = "SELECTALL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC        &kp N1        &kp N2            &kp N3        &kp N4  &kp N5       &kp UP_ARROW     &kp N6     &kp N7  &kp N8            &kp N9        &kp N0           &kp BACKSPACE
&kp TAB        &kp Q         &kp W             &kp E         &kp R   &kp T        &kp DOWN_ARROW   &kp Y      &kp U   &kp I             &kp O         &kp P            &kp DELETE
&kp BACKSPACE  &kp A         &kp S             &kp D         &kp F   &kp G        &kp LEFT_ARROW   &kp H      &kp J   &kp K             &kp L         &kp SEMI         &kp ENTER
&kp LSHFT      &kp Z         &kp X             &kp C         &kp V   &kp B        &kp RIGHT_ARROW  &kp N      &kp M   &kp COMMA         &kp DOT       &kp FSLH         &kp RIGHT_SHIFT
&kp C_MUTE     &kp LEFT_WIN  &kp LEFT_CONTROL  &kp LEFT_ALT  &mo 3   &kp SPACE    &kp ENTER        &kp SPACE  &mo 6   &kp LEFT_CONTROL  &kp LEFT_ALT  &kp PRINTSCREEN
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "BASE";
        };

        layer_1 {
            bindings = <
&kp ESCAPE        &kp F1          &kp F2            &kp F3           &kp F4     &kp F5             &trans  &kp F6           &kp F7             &kp F8             &kp F9            &kp F10         &kp F11
&trans            &none           &mkp MCLK         &msc SCRL_UP     &kp LC(C)  &kp LC(V)          &trans  &kp PRINTSCREEN  &mkp LCLK          &mmv MOVE_Y(-100)  &mkp RCLK         &msc SCRL_UP    &kp F12
&trans            &msc SCRL_LEFT  &mkp RCLK         &msc SCRL_DOWN   &mkp LCLK  &msc SCRL_RIGHT    &trans  &kp LC(Z)        &mmv MOVE_X(-100)  &mmv MOVE_Y(100)   &mmv MOVE_X(100)  &msc SCRL_DOWN  &trans
&kp LEFT_CONTROL  &to 2           &kp LC(KP_MINUS)  &kp LC(KP_PLUS)  &kp LC(X)  &kp LC(A)          &trans  &kp LS(LC(Z))    &mkp MCLK          &none              &msc SCRL_LEFT    &kp LA(TAB)     &mkp LCLK
&trans            &trans          &trans            &trans           &mo 3      &trans             &trans  &trans           &mo 6              &trans             &trans            &trans
            >;

            display-name = "M_SLOW";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp ESC           &kp F1          &kp F2            &kp F3           &kp F4     &kp F5             &trans  &kp F6           &kp F7             &kp F8             &kp F9            &kp F10         &kp F11
&trans            &none           &mkp MCLK         &msc SCRL_UP     &kp LC(C)  &kp LC(V)          &trans  &kp PRINTSCREEN  &mkp LCLK          &mmv MOVE_Y(-400)  &mkp RCLK         &msc SCRL_UP    &kp F12
&trans            &msc SCRL_LEFT  &mkp RCLK         &msc SCRL_DOWN   &mkp LCLK  &msc SCRL_RIGHT    &trans  &none            &mmv MOVE_X(-400)  &mmv MOVE_Y(400)   &mmv MOVE_X(400)  &msc SCRL_DOWN  &trans
&kp LEFT_CONTROL  &to 1           &kp LC(KP_MINUS)  &kp LC(KP_PLUS)  &kp LC(X)  &kp LC(A)          &trans  &none            &mkp MCLK          &none              &msc SCRL_LEFT    &kp LA(TAB)     &mkp LCLK
&trans            &trans          &trans            &trans           &mo 3      &trans             &trans  &trans           &mo 6              &trans             &trans            &trans
            >;

            display-name = "M_MID";
        };

        layer_3 {
            bindings = <
&kp GRAVE   &kp F1        &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp CARET      &kp AMPERSAND  &kp ASTERISK    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp F11
&none       &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &mmv MOVE_DOWN   &kp COLON      &kp EQUAL      &kp PLUS        &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp F12
&to 5       &kp TILDE     &none           &none            &none            &mkp MB5           &mmv MOVE_LEFT   &kp SEMICOLON  &kp MINUS      &kp UNDERSCORE  &kp DOUBLE_QUOTES     &kp SINGLE_QUOTE       &kp F9
&to 1       &to 1         &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &kp SLASH      &kp BACKSLASH  &kp PIPE        &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp F10
&kp C_MUTE  &bt BT_CLR    &bt BT_CLR_ALL  &trans           &trans           &none              &mkp LCLK        &trans         &none          &none           &none                 &none
            >;

            display-name = "SYMBOL";
        };

        layer_4 {
            bindings = <
&none  &kp F1          &none      &none           &none      &none              &none  &none  &none              &none              &none             &none            &none
&none  &none           &mkp MCLK  &msc SCRL_UP    &to 1      &none              &none  &none  &mkp LCLK          &mmv MOVE_Y(-600)  &mkp RCLK         &msc SCRL_UP     &none
&none  &msc SCRL_LEFT  &mkp RCLK  &msc SCRL_DOWN  &mkp LCLK  &msc SCRL_RIGHT    &none  &none  &mmv MOVE_X(-600)  &mmv MOVE_Y(600)   &mmv MOVE_X(600)  &msc SCRL_DOWN   &none
&none  &none           &none      &none           &none      &none              &none  &none  &mkp MCLK          &none              &msc SCRL_LEFT    &msc SCRL_RIGHT  &mkp LCLK
&none  &none           &none      &none           &to 0      &none              &none  &none  &to 0              &none              &none             &none
            >;

            display-name = "M_FAST";
        };

        layer_5 {
            bindings = <
&bt BT_CLR_ALL  &none  &none           &none           &none            &bt BT_CLR    &none  &none  &none     &none     &none      &none  &none
&none           &none  &none           &mmv MOVE_UP    &none            &none         &none  &none  &none     &kp UP    &none      &none  &none
&none           &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none         &none  &none  &kp LEFT  &kp DOWN  &kp RIGHT  &none  &none
&none           &none  &none           &none           &none            &none         &none  &none  &none     &none     &none      &none  &none
&none           &none  &none           &none           &to 0            &none         &none  &none  &none     &none     &none      &none
            >;

            display-name = "ARROWS";
        };

        layer_6 {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &trans  &kp F6  &kp F7    &kp F8    &kp F9     &kp F10  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &kp UP    &trans     &trans   &kp F12
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans     &to 1    &to 1
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans     &trans
            >;

            label = "FUNCTIONS";
        };
    };
};
